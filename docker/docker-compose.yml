version: '3.8'
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb-container
    ports:
      - "27017:27017"
    env_file:
      - .env
    networks:
      - bridge-net
    command: --bind_ip 0.0.0.0
    volumes:
      - ./data/db:/data/db

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-container
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - bridge-net

  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1-container
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    env_file:
      - ./.env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:29092,EXTERNAL://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - bridge-net
    volumes:
      - ./kafka_data1:/var/lib/kafka/data

  kafka-2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-2-container
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:29093,EXTERNAL://localhost:9093
    networks:
      - bridge-net
    volumes:
      - ./kafka_data2:/var/lib/kafka/data

  kafka-3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-3-container
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:29094,EXTERNAL://localhost:9094
    networks:
      - bridge-net
    volumes:
      - ./kafka_data3:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8989:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:29092,kafka-2:29093,kafka-3:29094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - bridge-net

# TODO: 로컬에서 설치하고 삭제 예정
#  controller:
#    image: ngrinder/controller
#    container_name: ngrinder-controller
#    ports:
#      - "8300:80"
#      - "16001:16001"
#      - "12000-12009:12000-12009"
#    volumes:
#      - ./ngrinder-controller:/opt/ngrinder-controller
#    networks:
#      - bridge-net
#
#  agent:
#    image: ngrinder/agent
#    container_name: ngrinder-agent
#    depends_on:
#      - controller
#    environment:
#      NGRINDER_CONTROLLER_IP: "controller:80"
#    networks:
#      - bridge-net
#  jmeter:
#    image: justb4/jmeter:latest
#    container_name: jmeter-gui
#    environment:
#      - DISPLAY=172.30.1.5:0.0
#    volumes:
#      - ./jmeter-plans:/jmeter-plans
#    networks:
#      - bridge-net

networks:
  bridge-net:
    driver: bridge

volumes:
  mongodb_data:
  kafka_data:

